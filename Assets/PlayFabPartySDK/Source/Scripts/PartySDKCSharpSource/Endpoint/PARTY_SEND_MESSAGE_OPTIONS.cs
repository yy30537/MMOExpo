using System;
using PartyCSharpSDK.Interop;

namespace PartyCSharpSDK
{
    //typedef enum PARTY_SEND_MESSAGE_OPTIONS
    //{
    //    PARTY_SEND_MESSAGE_OPTIONS_DEFAULT = 0x0000,
    //    PARTY_SEND_MESSAGE_OPTIONS_GUARANTEED_DELIVERY = 0x0001,
    //    PARTY_SEND_MESSAGE_OPTIONS_BEST_EFFORT_DELIVERY = 0x0000,
    //    PARTY_SEND_MESSAGE_OPTIONS_SEQUENTIAL_DELIVERY = 0x0002,
    //    PARTY_SEND_MESSAGE_OPTIONS_NONSEQUENTIAL_DELIVERY = 0x0000,
    //    PARTY_SEND_MESSAGE_OPTIONS_COPY_DATA_BUFFERS = 0x0000,
    //    PARTY_SEND_MESSAGE_OPTIONS_DONT_COPY_DATA_BUFFERS = 0x0004,
    //    PARTY_SEND_MESSAGE_OPTIONS_COALESCE_OPPORTUNISTICALLY = 0x0000,
    //    PARTY_SEND_MESSAGE_OPTIONS_ALWAYS_COALESCE_UNTIL_FLUSHED = 0x0008,
    //    PARTY_SEND_MESSAGE_OPTIONS_REQUIRE_TIMELY_ACKNOWLEDGEMENT = 0x0000,
    //    PARTY_SEND_MESSAGE_OPTIONS_ALLOW_LAZY_ACKNOWLEDGEMENT = 0x0010,
    //} PARTY_SEND_MESSAGE_OPTIONS;
    public enum PARTY_SEND_MESSAGE_OPTIONS : UInt32
    {
        PARTY_SEND_MESSAGE_OPTIONS_DEFAULT = 0,
        PARTY_SEND_MESSAGE_OPTIONS_GUARANTEED_DELIVERY = 1,
        PARTY_SEND_MESSAGE_OPTIONS_BEST_EFFORT_DELIVERY = 0,
        PARTY_SEND_MESSAGE_OPTIONS_SEQUENTIAL_DELIVERY = 2,
        PARTY_SEND_MESSAGE_OPTIONS_NONSEQUENTIAL_DELIVERY = 0,
//  TODO:MSFT:25263054, we should internally pin the mememory and
//  apply PARTY_SEND_MESSAGE_OPTIONS_DONT_COPY_DATA_BUFFERS when
//  calling underlying Party library.
//      PARTY_SEND_MESSAGE_OPTIONS_COPY_DATA_BUFFERS = 0,
//      PARTY_SEND_MESSAGE_OPTIONS_DONT_COPY_DATA_BUFFERS = 4,
        PARTY_SEND_MESSAGE_OPTIONS_COALESCE_OPPORTUNISTICALLY = 0,
        PARTY_SEND_MESSAGE_OPTIONS_ALWAYS_COALESCE_UNTIL_FLUSHED = 8,
        PARTY_SEND_MESSAGE_OPTIONS_REQUIRE_TIMELY_ACKNOWLEDGEMENT = 0,
        PARTY_SEND_MESSAGE_OPTIONS_ALLOW_LAZY_ACKNOWLEDGEMENT = 16,
    }
}